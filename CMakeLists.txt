project (ayatana-indicator-datetime C CXX)
cmake_minimum_required (VERSION 3.13)

list (APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    SET(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "..." FORCE)
endif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)

set (PROJECT_VERSION "0.8.3")
set (PACKAGE ${CMAKE_PROJECT_NAME})
option(ENABLE_TESTS "Enable all tests and checks" OFF)
option(ENABLE_COVERAGE "Enable coverage reports (includes enabling all tests and checks)" OFF)

if(ENABLE_COVERAGE)
    set(ENABLE_TESTS ON)
    set(CMAKE_BUILD_TYPE "Coverage")
else()
    set(CMAKE_BUILD_TYPE "Release")
endif()

##
##  GNU standard installation directories
##

include (GNUInstallDirs)
set (CMAKE_INSTALL_PKGLIBEXECDIR "${CMAKE_INSTALL_LIBEXECDIR}/${CMAKE_PROJECT_NAME}")
set (CMAKE_INSTALL_FULL_PKGLIBEXECDIR "${CMAKE_INSTALL_FULL_LIBEXECDIR}/${CMAKE_PROJECT_NAME}")

##
## Gettext
##

set (GETTEXT_PACKAGE "ayatana-indicator-datetime")
add_definitions (-DGETTEXT_PACKAGE="${GETTEXT_PACKAGE}"
                 -DLOCALEDIR="${CMAKE_INSTALL_FULL_LOCALEDIR}")

set(ALARM_DEFAULT_SOUND    "/usr/share/sounds/ubuntu/ringtones/Alarm clock.ogg")
set(CALENDAR_DEFAULT_SOUND "/usr/share/sounds/ubuntu/ringtones/Marimbach.ogg")
add_definitions(-DALARM_DEFAULT_SOUND="${ALARM_DEFAULT_SOUND}"
                -DCALENDAR_DEFAULT_SOUND="${CALENDAR_DEFAULT_SOUND}")

##
##  Check for prerequisites
##

find_package (PkgConfig REQUIRED)
include (CheckIncludeFile)
include (FindPkgConfig)

pkg_check_modules (SERVICE_DEPS REQUIRED
                   libayatana-common>=0.9.3
                   glib-2.0>=2.36
                   gio-unix-2.0>=2.36
                   libical>=0.48
                   libecal-2.0>=3.16
                   libedataserver-1.2>=3.5
                   gstreamer-1.0>=1.2
                   libnotify>=0.7.6
                   properties-cpp>=0.0.1
                   libaccounts-glib>=1.18)
include_directories (SYSTEM ${SERVICE_DEPS_INCLUDE_DIRS})

# lomiri-app-launch

pkg_check_modules(LOMIRIAPPLAUNCH lomiri-app-launch>=0)
include_directories(${LOMIRIAPPLAUNCH_INCLUDE_DIRS})

if(LOMIRIAPPLAUNCH_FOUND)
    add_definitions( -DHAS_LOMIRIAPPLAUNCH )
endif()

if(EXISTS "/usr/share/accountsservice/interfaces/com.ubuntu.touch.AccountsService.Sound.xml")
  set (HAVE_UT_ACCTSERVICE_SYSTEMSOUND_SETTINGS ON)
  add_definitions ( -DHAS_UT_ACCTSERVICE_SYSTEMSOUND_SETTINGS )
else()
  set (HAVE_UT_ACCTSERVICE_SYSTEMSOUND_SETTINGS OFF)
endif()

##
##  custom targets
##

set (ARCHIVE_NAME ${CMAKE_PROJECT_NAME}-${PROJECT_VERSION})
add_custom_target (dist
                   COMMAND bzr export --root=${ARCHIVE_NAME} ${CMAKE_BINARY_DIR}/${ARCHIVE_NAME}.tar.gz
                   WORKING_DIRECTORY ${CMAKE_SOURCE_DIR})

add_custom_target (cppcheck COMMAND cppcheck --enable=all -q --error-exitcode=2 --inline-suppr
                   ${CMAKE_SOURCE_DIR}/src
                   ${CMAKE_SOURCE_DIR}/tests)

##
##  Actual building
##

if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")

    set(COMPILE_FLAGS "${COMPILE_FLAGS} -Weverything")
    set(COMPILE_FLAGS "${COMPILE_FLAGS} -Wno-c++98-compat -Wno-padded")
    set(COMPILE_FLAGS "${COMPILE_FLAGS} -Wno-documentation")

else()

    set(COMPILE_FLAGS "${COMPILE_FLAGS} -Wall")

endif()


include_directories (${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories (${CMAKE_CURRENT_BINARY_DIR}/include)

# testing & coverage
if (${ENABLE_TESTS})
  pkg_check_modules (DBUSTEST REQUIRED dbustest-1>=14.04.0)
  enable_testing ()
  if (${ENABLE_COVERAGE})
    find_package(CoverageReport)
    ENABLE_COVERAGE_REPORT(
    TARGETS indicatordatetimeservice indicator-datetime-service
    TESTS test-actions test-alarm-queue test-clock test-datetime test-exporter test-formatter test-live-actions test-locations test-menu-appointments test-menus test-notification test-notification-response test-planner test-settings test-sound test-timezone-timedated test-utils test-eds-ics-all-day-events test-eds-ics-repeating-events test-eds-ics-nonrepeating-events test-eds-ics-repeating-valarms test-eds-ics-missing-trigger test-eds-ics-tzids test-eds-ics-tzids-2 test-eds-ics-tzids-utc test-eds-ics-non-attending-alarms test-eds-ics-repeating-events-with-individual-change manual-test-snap
    FILTER /usr/include ${CMAKE_BINARY_DIR}/*
    )
  endif ()
endif ()

# actually build things
add_subdirectory(include)
add_subdirectory(src)
add_subdirectory(data)
add_subdirectory(po)
if (${ENABLE_TESTS})
  add_subdirectory(tests)
endif ()

# Display config info

message(STATUS "Install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Unit tests: ${ENABLE_TESTS}")
